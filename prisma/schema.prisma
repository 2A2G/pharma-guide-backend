// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

/**
 * npx prisma migrate dev  -> Crea y aplica migraciones en desarrollo, útil cuando se hacen cambios en el esquema y se necesita aplicarlos en la base de datos local.
 * npx prisma migrate reset --force  -> Reinicia la base de datos, eliminando todas las tablas y aplicando todas las migraciones desde cero. La opción `--force` evita la confirmación interactiva.
 * npx prisma migrate deploy -> Aplica las migraciones pendientes en un entorno de producción o despliegue, sin eliminar datos existentes.
 * npx prisma db push  -> Sin generar migraciones, empuja el estado actual del esquema a la base de datos (útil cuando solo quieres sincronizar el esquema sin generar migraciones).
 * npx prisma generate  -> Regenera el cliente Prisma después de realizar cambios en el esquema o después de actualizar la configuración.
 * npx prisma studio  -> Abre una interfaz gráfica en el navegador para interactuar con la base de datos a través de Prisma Studio, donde puedes visualizar y modificar los datos.
 */
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement()) @db.Integer
  name String @unique @db.VarChar(100)

  user User[]

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  statusId  Int?     @db.Integer
}

model User {
  id        Int    @id @default(autoincrement()) @db.Integer
  full_name String @db.VarChar(100)
  email     String @unique
  password  String @db.VarChar(100)

  roleId     Int
  studyPlans StudyPlan[]

  role Role   @relation(fields: [roleId], references: [id])
  drug Drug[]

  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StudyPlan {
  id          Int     @id @default(autoincrement()) @db.Integer
  userId      Int
  subjet_name String  @unique @db.VarChar(100)
  total_days  Int     @db.Integer
  daily_hour  Decimal @db.Decimal(10, 2)

  isDeleted Boolean @default(false)

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Drug {
  id                  Int     @id @default(autoincrement()) @db.Integer
  name_generic        String  @db.VarChar(100)
  brand_name          String  @db.VarChar(100)
  mechanism_of_action String  @db.VarChar(255)
  therapeutic_class   String? @db.VarChar(100)
  tags                String? @db.Text
  isDeleted           Boolean @default(false)
  userId              Int

  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Prompt {
  id          Int    @id @default(autoincrement()) @db.Integer
  name        String @db.text
  description String @db.text
}
